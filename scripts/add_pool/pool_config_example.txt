########################################################################################################################
#                                                                                                                      #
# Below is example content for the pool_config.json file. This requires an already deployed Reliquary contract, which  #
# will have the configured pools added to. It is very important to configure each option properly, as some properties  #    
# will be immutable once on chain. DO NOT INCLUDE THIS COMMENT BLOCK IN THE JSON FILE.                                 #
#                                                                                                                      #
# `reliquary`: Address of the Reliquary contract you will be adding pools to.                                          #
# `weth`: Address of the wrapped native token contract for the chain you are deploying to.                             #
#                                                                                                                      #
# `multisig`: Address to transfer admin roles to at end of script. Leaving set to address zero will skip this step,    #
#     leaving the deployer's address as the admin.                                                                     #
#                                                                                                                      #
# `pools`: May be of any length (or empty). Each member must have each property defined in the correct order shown.    #
#     `allocPoint`: Amount of allocation points for this pool. The pool will receive emissions proportional to the     #
#         total number of allocation points for all pools.                                                             #
#     `allowPartialWithdrawals`: hether users can withdraw less than their entire position. A value of false will also #
#         disable shift and split functionality. This is useful for adding pools with decreasing levelMultipliers.     #
#     `childRewarderTokens`: If set, will determine the rewardTokens for a ParentRewarder, which will be set as the    #
#         rewarder for this pool.                                                                                      #
#     `childRewarderPeriods`: Determines `distributionPeriod`s for rewarders above.                                    #
#     `levelMultipliers`: Multiplier applied to size of positions in each maturity level when calculating rewards.     #
#     `name`: Name of the pool.                                                                                        #
#     `poolToken`: Address for the token this pool takes for deposits.                                                 #
#     `requiredMaturities`: Maturity required, in seconds, for a position to reach each maturity level.                #
#     `tokenType`: Type of NFTDescriptor to use for this token. Valid values are "normal", "4626", and "pair". Use     #
#         "4626" if `poolToken` is an ERC4626 contract, and "pair" if it is a UniswapV2Pair.                           #
#                                                                                                                      #
########################################################################################################################

{
    "reliquary": "0xF512283347C174399Cc3E11492ead8b49BD2712e",
    "weth": "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",

    "multisig": "0x52786B7897Cc5b195559091e16ee6b184fd25b30",

    "pools": [
        {
            "allocPoint": 100,
            "allowPartialWithdrawals": true,
            "childRewarderTokens": ["0x21Ada0D2aC28C3A5Fa3cD2eE30882dA8812279B6"],
            "childRewarderPeriods": [84600],
            "levelMultipliers": [100, 120, 150, 200, 300, 400, 500, 750],
            "name": "USDC Optimizer",
            "poolToken": "0x3d34C680428F05C185ee692A6fA677a494fB787A",
            "requiredMaturities": [0, 86400, 604800, 1209600, 2592000, 7776000, 15552000, 31536000],
            "tokenType": "4626"
        },
        {
            "allocPoint": 50,
            "allowPartialWithdrawals": true,
            "childRewarderTokens": ["0x21Ada0D2aC28C3A5Fa3cD2eE30882dA8812279B6"],
            "childRewarderPeriods": [84600], 
            "levelMultipliers": [100, 120, 150, 200, 300, 400],
            "name": "ETH Optimizer",
            "poolToken": "0x00764a204165db75CC4f7c50CdC7A409b14F995d",
            "requiredMaturities": [0, 86400, 604800, 1209600, 2592000, 7776000],
            "tokenType": "4626"
        }
    ]
}
